(lang dune 3.6)
(name merlin-lib)
(version 4.6-414)
(sections
 (lib .)
 (libexec .)
 (doc ../../doc/merlin-lib)
 (stublibs ../stublibs))
(files
 (lib
  (META
   analysis/browse_misc.ml
   analysis/browse_tree.ml
   analysis/browse_tree.mli
   analysis/completion.ml
   analysis/completion.mli
   analysis/construct.ml
   analysis/construct.mli
   analysis/context.ml
   analysis/context.mli
   analysis/destruct.ml
   analysis/destruct.mli
   analysis/expansion.ml
   analysis/expansion.mli
   analysis/jump.ml
   analysis/jump.mli
   analysis/locate.ml
   analysis/locate.mli
   analysis/merlin_analysis.cma
   analysis/merlin_analysis.cmi
   analysis/merlin_analysis.cmt
   analysis/merlin_analysis.cmx
   analysis/merlin_analysis.cmxa
   analysis/merlin_analysis.lib
   analysis/merlin_analysis.ml
   analysis/merlin_analysis__Browse_misc.cmi
   analysis/merlin_analysis__Browse_misc.cmt
   analysis/merlin_analysis__Browse_misc.cmx
   analysis/merlin_analysis__Browse_tree.cmi
   analysis/merlin_analysis__Browse_tree.cmt
   analysis/merlin_analysis__Browse_tree.cmti
   analysis/merlin_analysis__Browse_tree.cmx
   analysis/merlin_analysis__Completion.cmi
   analysis/merlin_analysis__Completion.cmt
   analysis/merlin_analysis__Completion.cmti
   analysis/merlin_analysis__Completion.cmx
   analysis/merlin_analysis__Construct.cmi
   analysis/merlin_analysis__Construct.cmt
   analysis/merlin_analysis__Construct.cmti
   analysis/merlin_analysis__Construct.cmx
   analysis/merlin_analysis__Context.cmi
   analysis/merlin_analysis__Context.cmt
   analysis/merlin_analysis__Context.cmti
   analysis/merlin_analysis__Context.cmx
   analysis/merlin_analysis__Destruct.cmi
   analysis/merlin_analysis__Destruct.cmt
   analysis/merlin_analysis__Destruct.cmti
   analysis/merlin_analysis__Destruct.cmx
   analysis/merlin_analysis__Expansion.cmi
   analysis/merlin_analysis__Expansion.cmt
   analysis/merlin_analysis__Expansion.cmti
   analysis/merlin_analysis__Expansion.cmx
   analysis/merlin_analysis__Jump.cmi
   analysis/merlin_analysis__Jump.cmt
   analysis/merlin_analysis__Jump.cmti
   analysis/merlin_analysis__Jump.cmx
   analysis/merlin_analysis__Locate.cmi
   analysis/merlin_analysis__Locate.cmt
   analysis/merlin_analysis__Locate.cmti
   analysis/merlin_analysis__Locate.cmx
   analysis/merlin_analysis__Misc_utils.cmi
   analysis/merlin_analysis__Misc_utils.cmt
   analysis/merlin_analysis__Misc_utils.cmti
   analysis/merlin_analysis__Misc_utils.cmx
   analysis/merlin_analysis__Namespaced_path.cmi
   analysis/merlin_analysis__Namespaced_path.cmt
   analysis/merlin_analysis__Namespaced_path.cmti
   analysis/merlin_analysis__Namespaced_path.cmx
   analysis/merlin_analysis__Ocamldoc.cmi
   analysis/merlin_analysis__Ocamldoc.cmt
   analysis/merlin_analysis__Ocamldoc.cmx
   analysis/merlin_analysis__Outline.cmi
   analysis/merlin_analysis__Outline.cmt
   analysis/merlin_analysis__Outline.cmti
   analysis/merlin_analysis__Outline.cmx
   analysis/merlin_analysis__Polarity_search.cmi
   analysis/merlin_analysis__Polarity_search.cmt
   analysis/merlin_analysis__Polarity_search.cmx
   analysis/merlin_analysis__Ptyp_of_type.cmi
   analysis/merlin_analysis__Ptyp_of_type.cmt
   analysis/merlin_analysis__Ptyp_of_type.cmti
   analysis/merlin_analysis__Ptyp_of_type.cmx
   analysis/merlin_analysis__Refactor_open.cmi
   analysis/merlin_analysis__Refactor_open.cmt
   analysis/merlin_analysis__Refactor_open.cmti
   analysis/merlin_analysis__Refactor_open.cmx
   analysis/merlin_analysis__Tail_analysis.cmi
   analysis/merlin_analysis__Tail_analysis.cmt
   analysis/merlin_analysis__Tail_analysis.cmti
   analysis/merlin_analysis__Tail_analysis.cmx
   analysis/merlin_analysis__Type_enclosing.cmi
   analysis/merlin_analysis__Type_enclosing.cmt
   analysis/merlin_analysis__Type_enclosing.cmti
   analysis/merlin_analysis__Type_enclosing.cmx
   analysis/merlin_analysis__Type_utils.cmi
   analysis/merlin_analysis__Type_utils.cmt
   analysis/merlin_analysis__Type_utils.cmti
   analysis/merlin_analysis__Type_utils.cmx
   analysis/misc_utils.ml
   analysis/misc_utils.mli
   analysis/namespaced_path.ml
   analysis/namespaced_path.mli
   analysis/ocamldoc.ml
   analysis/outline.ml
   analysis/outline.mli
   analysis/polarity_search.ml
   analysis/ptyp_of_type.ml
   analysis/ptyp_of_type.mli
   analysis/refactor_open.ml
   analysis/refactor_open.mli
   analysis/tail_analysis.ml
   analysis/tail_analysis.mli
   analysis/type_enclosing.ml
   analysis/type_enclosing.mli
   analysis/type_utils.ml
   analysis/type_utils.mli
   config/merlin_config.cma
   config/merlin_config.cmi
   config/merlin_config.cmt
   config/merlin_config.cmx
   config/merlin_config.cmxa
   config/merlin_config.lib
   config/merlin_config.ml
   dot_protocol/merlin_dot_protocol.cma
   dot_protocol/merlin_dot_protocol.cmi
   dot_protocol/merlin_dot_protocol.cmt
   dot_protocol/merlin_dot_protocol.cmti
   dot_protocol/merlin_dot_protocol.cmx
   dot_protocol/merlin_dot_protocol.cmxa
   dot_protocol/merlin_dot_protocol.lib
   dot_protocol/merlin_dot_protocol.ml
   dot_protocol/merlin_dot_protocol.mli
   dune-package
   extend/extend_driver.ml
   extend/extend_driver.mli
   extend/extend_main.ml
   extend/extend_main.mli
   extend/extend_protocol.ml
   extend/merlin_extend.cma
   extend/merlin_extend.cmi
   extend/merlin_extend.cmt
   extend/merlin_extend.cmx
   extend/merlin_extend.cmxa
   extend/merlin_extend.lib
   extend/merlin_extend.ml
   extend/merlin_extend__Extend_driver.cmi
   extend/merlin_extend__Extend_driver.cmt
   extend/merlin_extend__Extend_driver.cmti
   extend/merlin_extend__Extend_driver.cmx
   extend/merlin_extend__Extend_main.cmi
   extend/merlin_extend__Extend_main.cmt
   extend/merlin_extend__Extend_main.cmti
   extend/merlin_extend__Extend_main.cmx
   extend/merlin_extend__Extend_protocol.cmi
   extend/merlin_extend__Extend_protocol.cmt
   extend/merlin_extend__Extend_protocol.cmx
   kernel/extension.ml
   kernel/extension.mli
   kernel/mbrowse.ml
   kernel/mbrowse.mli
   kernel/mconfig.ml
   kernel/mconfig.mli
   kernel/mconfig_dot.ml
   kernel/mconfig_dot.mli
   kernel/merlin_kernel.cma
   kernel/merlin_kernel.cmi
   kernel/merlin_kernel.cmt
   kernel/merlin_kernel.cmx
   kernel/merlin_kernel.cmxa
   kernel/merlin_kernel.lib
   kernel/merlin_kernel.ml
   kernel/merlin_kernel__Extension.cmi
   kernel/merlin_kernel__Extension.cmt
   kernel/merlin_kernel__Extension.cmti
   kernel/merlin_kernel__Extension.cmx
   kernel/merlin_kernel__Mbrowse.cmi
   kernel/merlin_kernel__Mbrowse.cmt
   kernel/merlin_kernel__Mbrowse.cmti
   kernel/merlin_kernel__Mbrowse.cmx
   kernel/merlin_kernel__Mconfig.cmi
   kernel/merlin_kernel__Mconfig.cmt
   kernel/merlin_kernel__Mconfig.cmti
   kernel/merlin_kernel__Mconfig.cmx
   kernel/merlin_kernel__Mconfig_dot.cmi
   kernel/merlin_kernel__Mconfig_dot.cmt
   kernel/merlin_kernel__Mconfig_dot.cmti
   kernel/merlin_kernel__Mconfig_dot.cmx
   kernel/merlin_kernel__Mocaml.cmi
   kernel/merlin_kernel__Mocaml.cmt
   kernel/merlin_kernel__Mocaml.cmti
   kernel/merlin_kernel__Mocaml.cmx
   kernel/merlin_kernel__Mpipeline.cmi
   kernel/merlin_kernel__Mpipeline.cmt
   kernel/merlin_kernel__Mpipeline.cmti
   kernel/merlin_kernel__Mpipeline.cmx
   kernel/merlin_kernel__Mppx.cmi
   kernel/merlin_kernel__Mppx.cmt
   kernel/merlin_kernel__Mppx.cmti
   kernel/merlin_kernel__Mppx.cmx
   kernel/merlin_kernel__Mreader.cmi
   kernel/merlin_kernel__Mreader.cmt
   kernel/merlin_kernel__Mreader.cmti
   kernel/merlin_kernel__Mreader.cmx
   kernel/merlin_kernel__Mreader_explain.cmi
   kernel/merlin_kernel__Mreader_explain.cmt
   kernel/merlin_kernel__Mreader_explain.cmx
   kernel/merlin_kernel__Mreader_extend.cmi
   kernel/merlin_kernel__Mreader_extend.cmt
   kernel/merlin_kernel__Mreader_extend.cmti
   kernel/merlin_kernel__Mreader_extend.cmx
   kernel/merlin_kernel__Mreader_lexer.cmi
   kernel/merlin_kernel__Mreader_lexer.cmt
   kernel/merlin_kernel__Mreader_lexer.cmti
   kernel/merlin_kernel__Mreader_lexer.cmx
   kernel/merlin_kernel__Mreader_parser.cmi
   kernel/merlin_kernel__Mreader_parser.cmt
   kernel/merlin_kernel__Mreader_parser.cmti
   kernel/merlin_kernel__Mreader_parser.cmx
   kernel/merlin_kernel__Mreader_recover.cmi
   kernel/merlin_kernel__Mreader_recover.cmt
   kernel/merlin_kernel__Mreader_recover.cmti
   kernel/merlin_kernel__Mreader_recover.cmx
   kernel/merlin_kernel__Msource.cmi
   kernel/merlin_kernel__Msource.cmt
   kernel/merlin_kernel__Msource.cmti
   kernel/merlin_kernel__Msource.cmx
   kernel/merlin_kernel__Mtyper.cmi
   kernel/merlin_kernel__Mtyper.cmt
   kernel/merlin_kernel__Mtyper.cmti
   kernel/merlin_kernel__Mtyper.cmx
   kernel/merlin_kernel__Pparse.cmi
   kernel/merlin_kernel__Pparse.cmt
   kernel/merlin_kernel__Pparse.cmti
   kernel/merlin_kernel__Pparse.cmx
   kernel/merlin_kernel__Standard_library.cmi
   kernel/merlin_kernel__Standard_library.cmt
   kernel/merlin_kernel__Standard_library.cmx
   kernel/mocaml.ml
   kernel/mocaml.mli
   kernel/mpipeline.ml
   kernel/mpipeline.mli
   kernel/mppx.ml
   kernel/mppx.mli
   kernel/mreader.ml
   kernel/mreader.mli
   kernel/mreader_explain.ml
   kernel/mreader_extend.ml
   kernel/mreader_extend.mli
   kernel/mreader_lexer.ml
   kernel/mreader_lexer.mli
   kernel/mreader_parser.ml
   kernel/mreader_parser.mli
   kernel/mreader_recover.ml
   kernel/mreader_recover.mli
   kernel/msource.ml
   kernel/msource.mli
   kernel/mtyper.ml
   kernel/mtyper.mli
   kernel/pparse.ml
   kernel/pparse.mli
   kernel/standard_library.ml
   ocaml_merlin_specific/browse_raw.ml
   ocaml_merlin_specific/browse_raw.mli
   ocaml_merlin_specific/merlin_specific.cma
   ocaml_merlin_specific/merlin_specific.cmi
   ocaml_merlin_specific/merlin_specific.cmt
   ocaml_merlin_specific/merlin_specific.cmx
   ocaml_merlin_specific/merlin_specific.cmxa
   ocaml_merlin_specific/merlin_specific.lib
   ocaml_merlin_specific/merlin_specific.ml
   ocaml_merlin_specific/merlin_specific__Browse_raw.cmi
   ocaml_merlin_specific/merlin_specific__Browse_raw.cmt
   ocaml_merlin_specific/merlin_specific__Browse_raw.cmti
   ocaml_merlin_specific/merlin_specific__Browse_raw.cmx
   ocaml_merlin_specific/merlin_specific__Tast_helper.cmi
   ocaml_merlin_specific/merlin_specific__Tast_helper.cmt
   ocaml_merlin_specific/merlin_specific__Tast_helper.cmx
   ocaml_merlin_specific/merlin_specific__Typer_raw.cmi
   ocaml_merlin_specific/merlin_specific__Typer_raw.cmt
   ocaml_merlin_specific/merlin_specific__Typer_raw.cmti
   ocaml_merlin_specific/merlin_specific__Typer_raw.cmx
   ocaml_merlin_specific/tast_helper.ml
   ocaml_merlin_specific/typer_raw.ml
   ocaml_merlin_specific/typer_raw.mli
   ocaml_parsing/ast_helper.ml
   ocaml_parsing/ast_helper.mli
   ocaml_parsing/ast_iterator.ml
   ocaml_parsing/ast_iterator.mli
   ocaml_parsing/ast_mapper.ml
   ocaml_parsing/ast_mapper.mli
   ocaml_parsing/asttypes.mli
   ocaml_parsing/attr_helper.ml
   ocaml_parsing/attr_helper.mli
   ocaml_parsing/builtin_attributes.ml
   ocaml_parsing/builtin_attributes.mli
   ocaml_parsing/docstrings.ml
   ocaml_parsing/docstrings.mli
   ocaml_parsing/extend_helper.ml
   ocaml_parsing/extend_helper.mli
   ocaml_parsing/fake.ml
   ocaml_parsing/fake.mli
   ocaml_parsing/location.ml
   ocaml_parsing/location.mli
   ocaml_parsing/location_aux.ml
   ocaml_parsing/location_aux.mli
   ocaml_parsing/longident.ml
   ocaml_parsing/longident.mli
   ocaml_parsing/msupport_parsing.ml
   ocaml_parsing/ocaml_parsing.cma
   ocaml_parsing/ocaml_parsing.cmi
   ocaml_parsing/ocaml_parsing.cmt
   ocaml_parsing/ocaml_parsing.cmx
   ocaml_parsing/ocaml_parsing.cmxa
   ocaml_parsing/ocaml_parsing.lib
   ocaml_parsing/ocaml_parsing.ml
   ocaml_parsing/ocaml_parsing__Ast_helper.cmi
   ocaml_parsing/ocaml_parsing__Ast_helper.cmt
   ocaml_parsing/ocaml_parsing__Ast_helper.cmti
   ocaml_parsing/ocaml_parsing__Ast_helper.cmx
   ocaml_parsing/ocaml_parsing__Ast_iterator.cmi
   ocaml_parsing/ocaml_parsing__Ast_iterator.cmt
   ocaml_parsing/ocaml_parsing__Ast_iterator.cmti
   ocaml_parsing/ocaml_parsing__Ast_iterator.cmx
   ocaml_parsing/ocaml_parsing__Ast_mapper.cmi
   ocaml_parsing/ocaml_parsing__Ast_mapper.cmt
   ocaml_parsing/ocaml_parsing__Ast_mapper.cmti
   ocaml_parsing/ocaml_parsing__Ast_mapper.cmx
   ocaml_parsing/ocaml_parsing__Asttypes.cmi
   ocaml_parsing/ocaml_parsing__Asttypes.cmti
   ocaml_parsing/ocaml_parsing__Attr_helper.cmi
   ocaml_parsing/ocaml_parsing__Attr_helper.cmt
   ocaml_parsing/ocaml_parsing__Attr_helper.cmti
   ocaml_parsing/ocaml_parsing__Attr_helper.cmx
   ocaml_parsing/ocaml_parsing__Builtin_attributes.cmi
   ocaml_parsing/ocaml_parsing__Builtin_attributes.cmt
   ocaml_parsing/ocaml_parsing__Builtin_attributes.cmti
   ocaml_parsing/ocaml_parsing__Builtin_attributes.cmx
   ocaml_parsing/ocaml_parsing__Docstrings.cmi
   ocaml_parsing/ocaml_parsing__Docstrings.cmt
   ocaml_parsing/ocaml_parsing__Docstrings.cmti
   ocaml_parsing/ocaml_parsing__Docstrings.cmx
   ocaml_parsing/ocaml_parsing__Extend_helper.cmi
   ocaml_parsing/ocaml_parsing__Extend_helper.cmt
   ocaml_parsing/ocaml_parsing__Extend_helper.cmti
   ocaml_parsing/ocaml_parsing__Extend_helper.cmx
   ocaml_parsing/ocaml_parsing__Fake.cmi
   ocaml_parsing/ocaml_parsing__Fake.cmt
   ocaml_parsing/ocaml_parsing__Fake.cmti
   ocaml_parsing/ocaml_parsing__Fake.cmx
   ocaml_parsing/ocaml_parsing__Location.cmi
   ocaml_parsing/ocaml_parsing__Location.cmt
   ocaml_parsing/ocaml_parsing__Location.cmti
   ocaml_parsing/ocaml_parsing__Location.cmx
   ocaml_parsing/ocaml_parsing__Location_aux.cmi
   ocaml_parsing/ocaml_parsing__Location_aux.cmt
   ocaml_parsing/ocaml_parsing__Location_aux.cmti
   ocaml_parsing/ocaml_parsing__Location_aux.cmx
   ocaml_parsing/ocaml_parsing__Longident.cmi
   ocaml_parsing/ocaml_parsing__Longident.cmt
   ocaml_parsing/ocaml_parsing__Longident.cmti
   ocaml_parsing/ocaml_parsing__Longident.cmx
   ocaml_parsing/ocaml_parsing__Msupport_parsing.cmi
   ocaml_parsing/ocaml_parsing__Msupport_parsing.cmt
   ocaml_parsing/ocaml_parsing__Msupport_parsing.cmx
   ocaml_parsing/ocaml_parsing__Parsetree.cmi
   ocaml_parsing/ocaml_parsing__Parsetree.cmti
   ocaml_parsing/ocaml_parsing__Pprintast.cmi
   ocaml_parsing/ocaml_parsing__Pprintast.cmt
   ocaml_parsing/ocaml_parsing__Pprintast.cmti
   ocaml_parsing/ocaml_parsing__Pprintast.cmx
   ocaml_parsing/ocaml_parsing__Printast.cmi
   ocaml_parsing/ocaml_parsing__Printast.cmt
   ocaml_parsing/ocaml_parsing__Printast.cmti
   ocaml_parsing/ocaml_parsing__Printast.cmx
   ocaml_parsing/ocaml_parsing__Syntaxerr.cmi
   ocaml_parsing/ocaml_parsing__Syntaxerr.cmt
   ocaml_parsing/ocaml_parsing__Syntaxerr.cmti
   ocaml_parsing/ocaml_parsing__Syntaxerr.cmx
   ocaml_parsing/parsetree.mli
   ocaml_parsing/pprintast.ml
   ocaml_parsing/pprintast.mli
   ocaml_parsing/printast.ml
   ocaml_parsing/printast.mli
   ocaml_parsing/syntaxerr.ml
   ocaml_parsing/syntaxerr.mli
   ocaml_preprocess/lexer_ident.ml
   ocaml_preprocess/lexer_ident.mli
   ocaml_preprocess/lexer_raw.ml
   ocaml_preprocess/lexer_raw.mli
   ocaml_preprocess/menhirLib.ml
   ocaml_preprocess/menhirLib.mli
   ocaml_preprocess/ocaml_preprocess.cma
   ocaml_preprocess/ocaml_preprocess.cmi
   ocaml_preprocess/ocaml_preprocess.cmt
   ocaml_preprocess/ocaml_preprocess.cmx
   ocaml_preprocess/ocaml_preprocess.cmxa
   ocaml_preprocess/ocaml_preprocess.lib
   ocaml_preprocess/ocaml_preprocess.ml
   ocaml_preprocess/ocaml_preprocess__Lexer_ident.cmi
   ocaml_preprocess/ocaml_preprocess__Lexer_ident.cmt
   ocaml_preprocess/ocaml_preprocess__Lexer_ident.cmti
   ocaml_preprocess/ocaml_preprocess__Lexer_ident.cmx
   ocaml_preprocess/ocaml_preprocess__Lexer_raw.cmi
   ocaml_preprocess/ocaml_preprocess__Lexer_raw.cmt
   ocaml_preprocess/ocaml_preprocess__Lexer_raw.cmti
   ocaml_preprocess/ocaml_preprocess__Lexer_raw.cmx
   ocaml_preprocess/ocaml_preprocess__MenhirLib.cmi
   ocaml_preprocess/ocaml_preprocess__MenhirLib.cmt
   ocaml_preprocess/ocaml_preprocess__MenhirLib.cmti
   ocaml_preprocess/ocaml_preprocess__MenhirLib.cmx
   ocaml_preprocess/ocaml_preprocess__Parser_explain.cmi
   ocaml_preprocess/ocaml_preprocess__Parser_explain.cmt
   ocaml_preprocess/ocaml_preprocess__Parser_explain.cmx
   ocaml_preprocess/ocaml_preprocess__Parser_printer.cmi
   ocaml_preprocess/ocaml_preprocess__Parser_printer.cmt
   ocaml_preprocess/ocaml_preprocess__Parser_printer.cmti
   ocaml_preprocess/ocaml_preprocess__Parser_printer.cmx
   ocaml_preprocess/ocaml_preprocess__Parser_raw.cmi
   ocaml_preprocess/ocaml_preprocess__Parser_raw.cmt
   ocaml_preprocess/ocaml_preprocess__Parser_raw.cmti
   ocaml_preprocess/ocaml_preprocess__Parser_raw.cmx
   ocaml_preprocess/ocaml_preprocess__Parser_recover.cmi
   ocaml_preprocess/ocaml_preprocess__Parser_recover.cmt
   ocaml_preprocess/ocaml_preprocess__Parser_recover.cmti
   ocaml_preprocess/ocaml_preprocess__Parser_recover.cmx
   ocaml_preprocess/parser_explain.ml
   ocaml_preprocess/parser_printer.ml
   ocaml_preprocess/parser_printer.mli
   ocaml_preprocess/parser_raw.ml
   ocaml_preprocess/parser_raw.mli
   ocaml_preprocess/parser_recover.ml
   ocaml_preprocess/parser_recover.mli
   ocaml_typing/annot.mli
   ocaml_typing/btype.ml
   ocaml_typing/btype.mli
   ocaml_typing/cmi_cache.ml
   ocaml_typing/cmi_format.ml
   ocaml_typing/cmi_format.mli
   ocaml_typing/cmt_cache.ml
   ocaml_typing/cmt_format.ml
   ocaml_typing/cmt_format.mli
   ocaml_typing/ctype.ml
   ocaml_typing/ctype.mli
   ocaml_typing/datarepr.ml
   ocaml_typing/datarepr.mli
   ocaml_typing/env.ml
   ocaml_typing/env.mli
   ocaml_typing/envaux.ml
   ocaml_typing/envaux.mli
   ocaml_typing/errortrace.ml
   ocaml_typing/errortrace.mli
   ocaml_typing/ident.ml
   ocaml_typing/ident.mli
   ocaml_typing/includeclass.ml
   ocaml_typing/includeclass.mli
   ocaml_typing/includecore.ml
   ocaml_typing/includecore.mli
   ocaml_typing/includemod.ml
   ocaml_typing/includemod.mli
   ocaml_typing/includemod_errorprinter.ml
   ocaml_typing/includemod_errorprinter.mli
   ocaml_typing/magic_numbers.ml
   ocaml_typing/msupport.ml
   ocaml_typing/msupport.mli
   ocaml_typing/mtype.ml
   ocaml_typing/mtype.mli
   ocaml_typing/natural.ml
   ocaml_typing/natural.mli
   ocaml_typing/ocaml_typing.cma
   ocaml_typing/ocaml_typing.cmi
   ocaml_typing/ocaml_typing.cmt
   ocaml_typing/ocaml_typing.cmx
   ocaml_typing/ocaml_typing.cmxa
   ocaml_typing/ocaml_typing.lib
   ocaml_typing/ocaml_typing.ml
   ocaml_typing/ocaml_typing__Annot.cmi
   ocaml_typing/ocaml_typing__Annot.cmti
   ocaml_typing/ocaml_typing__Btype.cmi
   ocaml_typing/ocaml_typing__Btype.cmt
   ocaml_typing/ocaml_typing__Btype.cmti
   ocaml_typing/ocaml_typing__Btype.cmx
   ocaml_typing/ocaml_typing__Cmi_cache.cmi
   ocaml_typing/ocaml_typing__Cmi_cache.cmt
   ocaml_typing/ocaml_typing__Cmi_cache.cmx
   ocaml_typing/ocaml_typing__Cmi_format.cmi
   ocaml_typing/ocaml_typing__Cmi_format.cmt
   ocaml_typing/ocaml_typing__Cmi_format.cmti
   ocaml_typing/ocaml_typing__Cmi_format.cmx
   ocaml_typing/ocaml_typing__Cmt_cache.cmi
   ocaml_typing/ocaml_typing__Cmt_cache.cmt
   ocaml_typing/ocaml_typing__Cmt_cache.cmx
   ocaml_typing/ocaml_typing__Cmt_format.cmi
   ocaml_typing/ocaml_typing__Cmt_format.cmt
   ocaml_typing/ocaml_typing__Cmt_format.cmti
   ocaml_typing/ocaml_typing__Cmt_format.cmx
   ocaml_typing/ocaml_typing__Ctype.cmi
   ocaml_typing/ocaml_typing__Ctype.cmt
   ocaml_typing/ocaml_typing__Ctype.cmti
   ocaml_typing/ocaml_typing__Ctype.cmx
   ocaml_typing/ocaml_typing__Datarepr.cmi
   ocaml_typing/ocaml_typing__Datarepr.cmt
   ocaml_typing/ocaml_typing__Datarepr.cmti
   ocaml_typing/ocaml_typing__Datarepr.cmx
   ocaml_typing/ocaml_typing__Env.cmi
   ocaml_typing/ocaml_typing__Env.cmt
   ocaml_typing/ocaml_typing__Env.cmti
   ocaml_typing/ocaml_typing__Env.cmx
   ocaml_typing/ocaml_typing__Envaux.cmi
   ocaml_typing/ocaml_typing__Envaux.cmt
   ocaml_typing/ocaml_typing__Envaux.cmti
   ocaml_typing/ocaml_typing__Envaux.cmx
   ocaml_typing/ocaml_typing__Errortrace.cmi
   ocaml_typing/ocaml_typing__Errortrace.cmt
   ocaml_typing/ocaml_typing__Errortrace.cmti
   ocaml_typing/ocaml_typing__Errortrace.cmx
   ocaml_typing/ocaml_typing__Ident.cmi
   ocaml_typing/ocaml_typing__Ident.cmt
   ocaml_typing/ocaml_typing__Ident.cmti
   ocaml_typing/ocaml_typing__Ident.cmx
   ocaml_typing/ocaml_typing__Includeclass.cmi
   ocaml_typing/ocaml_typing__Includeclass.cmt
   ocaml_typing/ocaml_typing__Includeclass.cmti
   ocaml_typing/ocaml_typing__Includeclass.cmx
   ocaml_typing/ocaml_typing__Includecore.cmi
   ocaml_typing/ocaml_typing__Includecore.cmt
   ocaml_typing/ocaml_typing__Includecore.cmti
   ocaml_typing/ocaml_typing__Includecore.cmx
   ocaml_typing/ocaml_typing__Includemod.cmi
   ocaml_typing/ocaml_typing__Includemod.cmt
   ocaml_typing/ocaml_typing__Includemod.cmti
   ocaml_typing/ocaml_typing__Includemod.cmx
   ocaml_typing/ocaml_typing__Includemod_errorprinter.cmi
   ocaml_typing/ocaml_typing__Includemod_errorprinter.cmt
   ocaml_typing/ocaml_typing__Includemod_errorprinter.cmti
   ocaml_typing/ocaml_typing__Includemod_errorprinter.cmx
   ocaml_typing/ocaml_typing__Magic_numbers.cmi
   ocaml_typing/ocaml_typing__Magic_numbers.cmt
   ocaml_typing/ocaml_typing__Magic_numbers.cmx
   ocaml_typing/ocaml_typing__Msupport.cmi
   ocaml_typing/ocaml_typing__Msupport.cmt
   ocaml_typing/ocaml_typing__Msupport.cmti
   ocaml_typing/ocaml_typing__Msupport.cmx
   ocaml_typing/ocaml_typing__Mtype.cmi
   ocaml_typing/ocaml_typing__Mtype.cmt
   ocaml_typing/ocaml_typing__Mtype.cmti
   ocaml_typing/ocaml_typing__Mtype.cmx
   ocaml_typing/ocaml_typing__Natural.cmi
   ocaml_typing/ocaml_typing__Natural.cmt
   ocaml_typing/ocaml_typing__Natural.cmti
   ocaml_typing/ocaml_typing__Natural.cmx
   ocaml_typing/ocaml_typing__Oprint.cmi
   ocaml_typing/ocaml_typing__Oprint.cmt
   ocaml_typing/ocaml_typing__Oprint.cmti
   ocaml_typing/ocaml_typing__Oprint.cmx
   ocaml_typing/ocaml_typing__Outcometree.cmi
   ocaml_typing/ocaml_typing__Outcometree.cmti
   ocaml_typing/ocaml_typing__Parmatch.cmi
   ocaml_typing/ocaml_typing__Parmatch.cmt
   ocaml_typing/ocaml_typing__Parmatch.cmti
   ocaml_typing/ocaml_typing__Parmatch.cmx
   ocaml_typing/ocaml_typing__Path.cmi
   ocaml_typing/ocaml_typing__Path.cmt
   ocaml_typing/ocaml_typing__Path.cmti
   ocaml_typing/ocaml_typing__Path.cmx
   ocaml_typing/ocaml_typing__Patterns.cmi
   ocaml_typing/ocaml_typing__Patterns.cmt
   ocaml_typing/ocaml_typing__Patterns.cmti
   ocaml_typing/ocaml_typing__Patterns.cmx
   ocaml_typing/ocaml_typing__Persistent_env.cmi
   ocaml_typing/ocaml_typing__Persistent_env.cmt
   ocaml_typing/ocaml_typing__Persistent_env.cmti
   ocaml_typing/ocaml_typing__Persistent_env.cmx
   ocaml_typing/ocaml_typing__Predef.cmi
   ocaml_typing/ocaml_typing__Predef.cmt
   ocaml_typing/ocaml_typing__Predef.cmti
   ocaml_typing/ocaml_typing__Predef.cmx
   ocaml_typing/ocaml_typing__Primitive.cmi
   ocaml_typing/ocaml_typing__Primitive.cmt
   ocaml_typing/ocaml_typing__Primitive.cmti
   ocaml_typing/ocaml_typing__Primitive.cmx
   ocaml_typing/ocaml_typing__Printpat.cmi
   ocaml_typing/ocaml_typing__Printpat.cmt
   ocaml_typing/ocaml_typing__Printpat.cmti
   ocaml_typing/ocaml_typing__Printpat.cmx
   ocaml_typing/ocaml_typing__Printtyp.cmi
   ocaml_typing/ocaml_typing__Printtyp.cmt
   ocaml_typing/ocaml_typing__Printtyp.cmti
   ocaml_typing/ocaml_typing__Printtyp.cmx
   ocaml_typing/ocaml_typing__Printtyped.cmi
   ocaml_typing/ocaml_typing__Printtyped.cmt
   ocaml_typing/ocaml_typing__Printtyped.cmti
   ocaml_typing/ocaml_typing__Printtyped.cmx
   ocaml_typing/ocaml_typing__Rec_check.cmi
   ocaml_typing/ocaml_typing__Rec_check.cmt
   ocaml_typing/ocaml_typing__Rec_check.cmti
   ocaml_typing/ocaml_typing__Rec_check.cmx
   ocaml_typing/ocaml_typing__Saved_parts.cmi
   ocaml_typing/ocaml_typing__Saved_parts.cmt
   ocaml_typing/ocaml_typing__Saved_parts.cmti
   ocaml_typing/ocaml_typing__Saved_parts.cmx
   ocaml_typing/ocaml_typing__Shape.cmi
   ocaml_typing/ocaml_typing__Shape.cmt
   ocaml_typing/ocaml_typing__Shape.cmti
   ocaml_typing/ocaml_typing__Shape.cmx
   ocaml_typing/ocaml_typing__Short_paths.cmi
   ocaml_typing/ocaml_typing__Short_paths.cmt
   ocaml_typing/ocaml_typing__Short_paths.cmti
   ocaml_typing/ocaml_typing__Short_paths.cmx
   ocaml_typing/ocaml_typing__Short_paths_graph.cmi
   ocaml_typing/ocaml_typing__Short_paths_graph.cmt
   ocaml_typing/ocaml_typing__Short_paths_graph.cmti
   ocaml_typing/ocaml_typing__Short_paths_graph.cmx
   ocaml_typing/ocaml_typing__Signature_group.cmi
   ocaml_typing/ocaml_typing__Signature_group.cmt
   ocaml_typing/ocaml_typing__Signature_group.cmti
   ocaml_typing/ocaml_typing__Signature_group.cmx
   ocaml_typing/ocaml_typing__Stypes.cmi
   ocaml_typing/ocaml_typing__Stypes.cmt
   ocaml_typing/ocaml_typing__Stypes.cmti
   ocaml_typing/ocaml_typing__Stypes.cmx
   ocaml_typing/ocaml_typing__Subst.cmi
   ocaml_typing/ocaml_typing__Subst.cmt
   ocaml_typing/ocaml_typing__Subst.cmti
   ocaml_typing/ocaml_typing__Subst.cmx
   ocaml_typing/ocaml_typing__Tast_iterator.cmi
   ocaml_typing/ocaml_typing__Tast_iterator.cmt
   ocaml_typing/ocaml_typing__Tast_iterator.cmti
   ocaml_typing/ocaml_typing__Tast_iterator.cmx
   ocaml_typing/ocaml_typing__Tast_mapper.cmi
   ocaml_typing/ocaml_typing__Tast_mapper.cmt
   ocaml_typing/ocaml_typing__Tast_mapper.cmti
   ocaml_typing/ocaml_typing__Tast_mapper.cmx
   ocaml_typing/ocaml_typing__Type_immediacy.cmi
   ocaml_typing/ocaml_typing__Type_immediacy.cmt
   ocaml_typing/ocaml_typing__Type_immediacy.cmti
   ocaml_typing/ocaml_typing__Type_immediacy.cmx
   ocaml_typing/ocaml_typing__Typeclass.cmi
   ocaml_typing/ocaml_typing__Typeclass.cmt
   ocaml_typing/ocaml_typing__Typeclass.cmti
   ocaml_typing/ocaml_typing__Typeclass.cmx
   ocaml_typing/ocaml_typing__Typecore.cmi
   ocaml_typing/ocaml_typing__Typecore.cmt
   ocaml_typing/ocaml_typing__Typecore.cmti
   ocaml_typing/ocaml_typing__Typecore.cmx
   ocaml_typing/ocaml_typing__Typedecl.cmi
   ocaml_typing/ocaml_typing__Typedecl.cmt
   ocaml_typing/ocaml_typing__Typedecl.cmti
   ocaml_typing/ocaml_typing__Typedecl.cmx
   ocaml_typing/ocaml_typing__Typedecl_immediacy.cmi
   ocaml_typing/ocaml_typing__Typedecl_immediacy.cmt
   ocaml_typing/ocaml_typing__Typedecl_immediacy.cmti
   ocaml_typing/ocaml_typing__Typedecl_immediacy.cmx
   ocaml_typing/ocaml_typing__Typedecl_properties.cmi
   ocaml_typing/ocaml_typing__Typedecl_properties.cmt
   ocaml_typing/ocaml_typing__Typedecl_properties.cmti
   ocaml_typing/ocaml_typing__Typedecl_properties.cmx
   ocaml_typing/ocaml_typing__Typedecl_separability.cmi
   ocaml_typing/ocaml_typing__Typedecl_separability.cmt
   ocaml_typing/ocaml_typing__Typedecl_separability.cmti
   ocaml_typing/ocaml_typing__Typedecl_separability.cmx
   ocaml_typing/ocaml_typing__Typedecl_unboxed.cmi
   ocaml_typing/ocaml_typing__Typedecl_unboxed.cmt
   ocaml_typing/ocaml_typing__Typedecl_unboxed.cmti
   ocaml_typing/ocaml_typing__Typedecl_unboxed.cmx
   ocaml_typing/ocaml_typing__Typedecl_variance.cmi
   ocaml_typing/ocaml_typing__Typedecl_variance.cmt
   ocaml_typing/ocaml_typing__Typedecl_variance.cmti
   ocaml_typing/ocaml_typing__Typedecl_variance.cmx
   ocaml_typing/ocaml_typing__Typedtree.cmi
   ocaml_typing/ocaml_typing__Typedtree.cmt
   ocaml_typing/ocaml_typing__Typedtree.cmti
   ocaml_typing/ocaml_typing__Typedtree.cmx
   ocaml_typing/ocaml_typing__Typemod.cmi
   ocaml_typing/ocaml_typing__Typemod.cmt
   ocaml_typing/ocaml_typing__Typemod.cmti
   ocaml_typing/ocaml_typing__Typemod.cmx
   ocaml_typing/ocaml_typing__Typeopt.cmi
   ocaml_typing/ocaml_typing__Typeopt.cmt
   ocaml_typing/ocaml_typing__Typeopt.cmti
   ocaml_typing/ocaml_typing__Typeopt.cmx
   ocaml_typing/ocaml_typing__Types.cmi
   ocaml_typing/ocaml_typing__Types.cmt
   ocaml_typing/ocaml_typing__Types.cmti
   ocaml_typing/ocaml_typing__Types.cmx
   ocaml_typing/ocaml_typing__Typetexp.cmi
   ocaml_typing/ocaml_typing__Typetexp.cmt
   ocaml_typing/ocaml_typing__Typetexp.cmti
   ocaml_typing/ocaml_typing__Typetexp.cmx
   ocaml_typing/ocaml_typing__Untypeast.cmi
   ocaml_typing/ocaml_typing__Untypeast.cmt
   ocaml_typing/ocaml_typing__Untypeast.cmti
   ocaml_typing/ocaml_typing__Untypeast.cmx
   ocaml_typing/oprint.ml
   ocaml_typing/oprint.mli
   ocaml_typing/outcometree.mli
   ocaml_typing/parmatch.ml
   ocaml_typing/parmatch.mli
   ocaml_typing/path.ml
   ocaml_typing/path.mli
   ocaml_typing/patterns.ml
   ocaml_typing/patterns.mli
   ocaml_typing/persistent_env.ml
   ocaml_typing/persistent_env.mli
   ocaml_typing/predef.ml
   ocaml_typing/predef.mli
   ocaml_typing/primitive.ml
   ocaml_typing/primitive.mli
   ocaml_typing/printpat.ml
   ocaml_typing/printpat.mli
   ocaml_typing/printtyp.ml
   ocaml_typing/printtyp.mli
   ocaml_typing/printtyped.ml
   ocaml_typing/printtyped.mli
   ocaml_typing/rec_check.ml
   ocaml_typing/rec_check.mli
   ocaml_typing/saved_parts.ml
   ocaml_typing/saved_parts.mli
   ocaml_typing/shape.ml
   ocaml_typing/shape.mli
   ocaml_typing/short_paths.ml
   ocaml_typing/short_paths.mli
   ocaml_typing/short_paths_graph.ml
   ocaml_typing/short_paths_graph.mli
   ocaml_typing/signature_group.ml
   ocaml_typing/signature_group.mli
   ocaml_typing/stypes.ml
   ocaml_typing/stypes.mli
   ocaml_typing/subst.ml
   ocaml_typing/subst.mli
   ocaml_typing/tast_iterator.ml
   ocaml_typing/tast_iterator.mli
   ocaml_typing/tast_mapper.ml
   ocaml_typing/tast_mapper.mli
   ocaml_typing/type_immediacy.ml
   ocaml_typing/type_immediacy.mli
   ocaml_typing/typeclass.ml
   ocaml_typing/typeclass.mli
   ocaml_typing/typecore.ml
   ocaml_typing/typecore.mli
   ocaml_typing/typedecl.ml
   ocaml_typing/typedecl.mli
   ocaml_typing/typedecl_immediacy.ml
   ocaml_typing/typedecl_immediacy.mli
   ocaml_typing/typedecl_properties.ml
   ocaml_typing/typedecl_properties.mli
   ocaml_typing/typedecl_separability.ml
   ocaml_typing/typedecl_separability.mli
   ocaml_typing/typedecl_unboxed.ml
   ocaml_typing/typedecl_unboxed.mli
   ocaml_typing/typedecl_variance.ml
   ocaml_typing/typedecl_variance.mli
   ocaml_typing/typedtree.ml
   ocaml_typing/typedtree.mli
   ocaml_typing/typemod.ml
   ocaml_typing/typemod.mli
   ocaml_typing/typeopt.ml
   ocaml_typing/typeopt.mli
   ocaml_typing/types.ml
   ocaml_typing/types.mli
   ocaml_typing/typetexp.ml
   ocaml_typing/typetexp.mli
   ocaml_typing/untypeast.ml
   ocaml_typing/untypeast.mli
   ocaml_utils/build_path_prefix_map.ml
   ocaml_utils/build_path_prefix_map.mli
   ocaml_utils/clflags.ml
   ocaml_utils/clflags.mli
   ocaml_utils/config.ml
   ocaml_utils/config.mli
   ocaml_utils/consistbl.ml
   ocaml_utils/consistbl.mli
   ocaml_utils/diffing.ml
   ocaml_utils/diffing.mli
   ocaml_utils/diffing_with_keys.ml
   ocaml_utils/diffing_with_keys.mli
   ocaml_utils/directory_content_cache.ml
   ocaml_utils/identifiable.ml
   ocaml_utils/identifiable.mli
   ocaml_utils/lazy_backtrack.ml
   ocaml_utils/lazy_backtrack.mli
   ocaml_utils/load_path.ml
   ocaml_utils/load_path.mli
   ocaml_utils/local_store.ml
   ocaml_utils/local_store.mli
   ocaml_utils/ocaml_utils.cma
   ocaml_utils/ocaml_utils.cmi
   ocaml_utils/ocaml_utils.cmt
   ocaml_utils/ocaml_utils.cmx
   ocaml_utils/ocaml_utils.cmxa
   ocaml_utils/ocaml_utils.lib
   ocaml_utils/ocaml_utils.ml
   ocaml_utils/ocaml_utils__Build_path_prefix_map.cmi
   ocaml_utils/ocaml_utils__Build_path_prefix_map.cmt
   ocaml_utils/ocaml_utils__Build_path_prefix_map.cmti
   ocaml_utils/ocaml_utils__Build_path_prefix_map.cmx
   ocaml_utils/ocaml_utils__Clflags.cmi
   ocaml_utils/ocaml_utils__Clflags.cmt
   ocaml_utils/ocaml_utils__Clflags.cmti
   ocaml_utils/ocaml_utils__Clflags.cmx
   ocaml_utils/ocaml_utils__Config.cmi
   ocaml_utils/ocaml_utils__Config.cmt
   ocaml_utils/ocaml_utils__Config.cmti
   ocaml_utils/ocaml_utils__Config.cmx
   ocaml_utils/ocaml_utils__Consistbl.cmi
   ocaml_utils/ocaml_utils__Consistbl.cmt
   ocaml_utils/ocaml_utils__Consistbl.cmti
   ocaml_utils/ocaml_utils__Consistbl.cmx
   ocaml_utils/ocaml_utils__Diffing.cmi
   ocaml_utils/ocaml_utils__Diffing.cmt
   ocaml_utils/ocaml_utils__Diffing.cmti
   ocaml_utils/ocaml_utils__Diffing.cmx
   ocaml_utils/ocaml_utils__Diffing_with_keys.cmi
   ocaml_utils/ocaml_utils__Diffing_with_keys.cmt
   ocaml_utils/ocaml_utils__Diffing_with_keys.cmti
   ocaml_utils/ocaml_utils__Diffing_with_keys.cmx
   ocaml_utils/ocaml_utils__Directory_content_cache.cmi
   ocaml_utils/ocaml_utils__Directory_content_cache.cmt
   ocaml_utils/ocaml_utils__Directory_content_cache.cmx
   ocaml_utils/ocaml_utils__Identifiable.cmi
   ocaml_utils/ocaml_utils__Identifiable.cmt
   ocaml_utils/ocaml_utils__Identifiable.cmti
   ocaml_utils/ocaml_utils__Identifiable.cmx
   ocaml_utils/ocaml_utils__Lazy_backtrack.cmi
   ocaml_utils/ocaml_utils__Lazy_backtrack.cmt
   ocaml_utils/ocaml_utils__Lazy_backtrack.cmti
   ocaml_utils/ocaml_utils__Lazy_backtrack.cmx
   ocaml_utils/ocaml_utils__Load_path.cmi
   ocaml_utils/ocaml_utils__Load_path.cmt
   ocaml_utils/ocaml_utils__Load_path.cmti
   ocaml_utils/ocaml_utils__Load_path.cmx
   ocaml_utils/ocaml_utils__Local_store.cmi
   ocaml_utils/ocaml_utils__Local_store.cmt
   ocaml_utils/ocaml_utils__Local_store.cmti
   ocaml_utils/ocaml_utils__Local_store.cmx
   ocaml_utils/ocaml_utils__Tbl.cmi
   ocaml_utils/ocaml_utils__Tbl.cmt
   ocaml_utils/ocaml_utils__Tbl.cmti
   ocaml_utils/ocaml_utils__Tbl.cmx
   ocaml_utils/ocaml_utils__Warnings.cmi
   ocaml_utils/ocaml_utils__Warnings.cmt
   ocaml_utils/ocaml_utils__Warnings.cmti
   ocaml_utils/ocaml_utils__Warnings.cmx
   ocaml_utils/tbl.ml
   ocaml_utils/tbl.mli
   ocaml_utils/warnings.ml
   ocaml_utils/warnings.mli
   opam
   os_ipc/libos_ipc_stubs.lib
   os_ipc/os_ipc.cma
   os_ipc/os_ipc.cmi
   os_ipc/os_ipc.cmt
   os_ipc/os_ipc.cmx
   os_ipc/os_ipc.cmxa
   os_ipc/os_ipc.lib
   os_ipc/os_ipc.ml
   query_commands/query_commands.cma
   query_commands/query_commands.cmi
   query_commands/query_commands.cmt
   query_commands/query_commands.cmti
   query_commands/query_commands.cmx
   query_commands/query_commands.cmxa
   query_commands/query_commands.lib
   query_commands/query_commands.ml
   query_commands/query_commands.mli
   query_protocol/query_protocol.cma
   query_protocol/query_protocol.cmi
   query_protocol/query_protocol.cmt
   query_protocol/query_protocol.cmx
   query_protocol/query_protocol.cmxa
   query_protocol/query_protocol.lib
   query_protocol/query_protocol.ml
   utils/file_cache.ml
   utils/file_cache.mli
   utils/file_id.ml
   utils/file_id.mli
   utils/libmerlin_utils_stubs.lib
   utils/logger.ml
   utils/logger.mli
   utils/marg.ml
   utils/marg.mli
   utils/merlin_utils.cma
   utils/merlin_utils.cmi
   utils/merlin_utils.cmt
   utils/merlin_utils.cmx
   utils/merlin_utils.cmxa
   utils/merlin_utils.lib
   utils/merlin_utils.ml
   utils/merlin_utils__File_cache.cmi
   utils/merlin_utils__File_cache.cmt
   utils/merlin_utils__File_cache.cmti
   utils/merlin_utils__File_cache.cmx
   utils/merlin_utils__File_id.cmi
   utils/merlin_utils__File_id.cmt
   utils/merlin_utils__File_id.cmti
   utils/merlin_utils__File_id.cmx
   utils/merlin_utils__Logger.cmi
   utils/merlin_utils__Logger.cmt
   utils/merlin_utils__Logger.cmti
   utils/merlin_utils__Logger.cmx
   utils/merlin_utils__Marg.cmi
   utils/merlin_utils__Marg.cmt
   utils/merlin_utils__Marg.cmti
   utils/merlin_utils__Marg.cmx
   utils/merlin_utils__Misc.cmi
   utils/merlin_utils__Misc.cmt
   utils/merlin_utils__Misc.cmti
   utils/merlin_utils__Misc.cmx
   utils/merlin_utils__Ppxsetup.cmi
   utils/merlin_utils__Ppxsetup.cmt
   utils/merlin_utils__Ppxsetup.cmti
   utils/merlin_utils__Ppxsetup.cmx
   utils/merlin_utils__Sexp.cmi
   utils/merlin_utils__Sexp.cmt
   utils/merlin_utils__Sexp.cmti
   utils/merlin_utils__Sexp.cmx
   utils/merlin_utils__Std.cmi
   utils/merlin_utils__Std.cmt
   utils/merlin_utils__Std.cmx
   utils/misc.ml
   utils/misc.mli
   utils/ppxsetup.ml
   utils/ppxsetup.mli
   utils/sexp.ml
   utils/sexp.mli
   utils/std.ml))
 (libexec
  (analysis/merlin_analysis.cmxs
   config/merlin_config.cmxs
   dot_protocol/merlin_dot_protocol.cmxs
   extend/merlin_extend.cmxs
   kernel/merlin_kernel.cmxs
   ocaml_merlin_specific/merlin_specific.cmxs
   ocaml_parsing/ocaml_parsing.cmxs
   ocaml_preprocess/ocaml_preprocess.cmxs
   ocaml_typing/ocaml_typing.cmxs
   ocaml_utils/ocaml_utils.cmxs
   os_ipc/os_ipc.cmxs
   query_commands/query_commands.cmxs
   query_protocol/query_protocol.cmxs
   utils/merlin_utils.cmxs))
 (doc (CHANGES.md LICENSE README.md))
 (stublibs (dllmerlin_utils_stubs.dll dllos_ipc_stubs.dll)))
(library
 (name merlin-lib.analysis)
 (kind normal)
 (archives
  (byte analysis/merlin_analysis.cma)
  (native analysis/merlin_analysis.cmxa))
 (plugins
  (byte analysis/merlin_analysis.cma)
  (native analysis/merlin_analysis.cmxs))
 (native_archives analysis/merlin_analysis.lib)
 (requires
  merlin-lib.config
  merlin-lib.ocaml_merlin_specific
  merlin-lib.extend
  merlin-lib.kernel
  merlin-lib.utils
  merlin-lib.ocaml_parsing
  merlin-lib.ocaml_preprocess
  merlin-lib.query_protocol
  merlin-lib.ocaml_typing
  merlin-lib.ocaml_utils)
 (main_module_name Merlin_analysis)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Merlin_analysis)
   (modules
    ((name Browse_misc)
     (obj_name merlin_analysis__Browse_misc)
     (visibility public)
     (impl))
    ((name Browse_tree)
     (obj_name merlin_analysis__Browse_tree)
     (visibility public)
     (impl)
     (intf))
    ((name Completion)
     (obj_name merlin_analysis__Completion)
     (visibility public)
     (impl)
     (intf))
    ((name Construct)
     (obj_name merlin_analysis__Construct)
     (visibility public)
     (impl)
     (intf))
    ((name Context)
     (obj_name merlin_analysis__Context)
     (visibility public)
     (impl)
     (intf))
    ((name Destruct)
     (obj_name merlin_analysis__Destruct)
     (visibility public)
     (impl)
     (intf))
    ((name Expansion)
     (obj_name merlin_analysis__Expansion)
     (visibility public)
     (impl)
     (intf))
    ((name Jump)
     (obj_name merlin_analysis__Jump)
     (visibility public)
     (impl)
     (intf))
    ((name Locate)
     (obj_name merlin_analysis__Locate)
     (visibility public)
     (impl)
     (intf))
    ((name Misc_utils)
     (obj_name merlin_analysis__Misc_utils)
     (visibility public)
     (impl)
     (intf))
    ((name Namespaced_path)
     (obj_name merlin_analysis__Namespaced_path)
     (visibility public)
     (impl)
     (intf))
    ((name Ocamldoc)
     (obj_name merlin_analysis__Ocamldoc)
     (visibility public)
     (impl))
    ((name Outline)
     (obj_name merlin_analysis__Outline)
     (visibility public)
     (impl)
     (intf))
    ((name Polarity_search)
     (obj_name merlin_analysis__Polarity_search)
     (visibility public)
     (impl))
    ((name Ptyp_of_type)
     (obj_name merlin_analysis__Ptyp_of_type)
     (visibility public)
     (impl)
     (intf))
    ((name Refactor_open)
     (obj_name merlin_analysis__Refactor_open)
     (visibility public)
     (impl)
     (intf))
    ((name Tail_analysis)
     (obj_name merlin_analysis__Tail_analysis)
     (visibility public)
     (impl)
     (intf))
    ((name Type_enclosing)
     (obj_name merlin_analysis__Type_enclosing)
     (visibility public)
     (impl)
     (intf))
    ((name Type_utils)
     (obj_name merlin_analysis__Type_utils)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Merlin_analysis)
    (obj_name merlin_analysis)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name merlin-lib.config)
 (kind normal)
 (archives (byte config/merlin_config.cma) (native config/merlin_config.cmxa))
 (plugins (byte config/merlin_config.cma) (native config/merlin_config.cmxs))
 (native_archives config/merlin_config.lib)
 (main_module_name Merlin_config)
 (modes byte native)
 (modules
  (singleton
   (name Merlin_config)
   (obj_name merlin_config)
   (visibility public)
   (impl))))
(library
 (name merlin-lib.dot_protocol)
 (kind normal)
 (archives
  (byte dot_protocol/merlin_dot_protocol.cma)
  (native dot_protocol/merlin_dot_protocol.cmxa))
 (plugins
  (byte dot_protocol/merlin_dot_protocol.cma)
  (native dot_protocol/merlin_dot_protocol.cmxs))
 (native_archives dot_protocol/merlin_dot_protocol.lib)
 (requires merlin-lib.utils csexp)
 (main_module_name Merlin_dot_protocol)
 (modes byte native)
 (modules
  (singleton
   (name Merlin_dot_protocol)
   (obj_name merlin_dot_protocol)
   (visibility public)
   (impl)
   (intf))))
(library
 (name merlin-lib.extend)
 (kind normal)
 (archives (byte extend/merlin_extend.cma) (native extend/merlin_extend.cmxa))
 (plugins (byte extend/merlin_extend.cma) (native extend/merlin_extend.cmxs))
 (native_archives extend/merlin_extend.lib)
 (requires
  merlin-lib.ocaml_parsing
  merlin-lib.ocaml_typing
  unix
  merlin-lib.ocaml_utils)
 (main_module_name Merlin_extend)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Merlin_extend)
   (modules
    ((name Extend_driver)
     (obj_name merlin_extend__Extend_driver)
     (visibility public)
     (impl)
     (intf))
    ((name Extend_main)
     (obj_name merlin_extend__Extend_main)
     (visibility public)
     (impl)
     (intf))
    ((name Extend_protocol)
     (obj_name merlin_extend__Extend_protocol)
     (visibility public)
     (impl)))
   (alias_module
    (name Merlin_extend)
    (obj_name merlin_extend)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name merlin-lib.kernel)
 (kind normal)
 (archives (byte kernel/merlin_kernel.cma) (native kernel/merlin_kernel.cmxa))
 (plugins (byte kernel/merlin_kernel.cma) (native kernel/merlin_kernel.cmxs))
 (native_archives kernel/merlin_kernel.lib)
 (requires
  merlin-lib.config
  merlin-lib.os_ipc
  merlin-lib.ocaml_parsing
  merlin-lib.ocaml_preprocess
  merlin-lib.ocaml_typing
  merlin-lib.ocaml_utils
  merlin-lib.extend
  merlin-lib.ocaml_merlin_specific
  merlin-lib.utils
  merlin-lib.dot_protocol)
 (main_module_name Merlin_kernel)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Merlin_kernel)
   (modules
    ((name Extension)
     (obj_name merlin_kernel__Extension)
     (visibility public)
     (impl)
     (intf))
    ((name Mbrowse)
     (obj_name merlin_kernel__Mbrowse)
     (visibility public)
     (impl)
     (intf))
    ((name Mconfig)
     (obj_name merlin_kernel__Mconfig)
     (visibility public)
     (impl)
     (intf))
    ((name Mconfig_dot)
     (obj_name merlin_kernel__Mconfig_dot)
     (visibility public)
     (impl)
     (intf))
    ((name Mocaml)
     (obj_name merlin_kernel__Mocaml)
     (visibility public)
     (impl)
     (intf))
    ((name Mpipeline)
     (obj_name merlin_kernel__Mpipeline)
     (visibility public)
     (impl)
     (intf))
    ((name Mppx)
     (obj_name merlin_kernel__Mppx)
     (visibility public)
     (impl)
     (intf))
    ((name Mreader)
     (obj_name merlin_kernel__Mreader)
     (visibility public)
     (impl)
     (intf))
    ((name Mreader_explain)
     (obj_name merlin_kernel__Mreader_explain)
     (visibility public)
     (impl))
    ((name Mreader_extend)
     (obj_name merlin_kernel__Mreader_extend)
     (visibility public)
     (impl)
     (intf))
    ((name Mreader_lexer)
     (obj_name merlin_kernel__Mreader_lexer)
     (visibility public)
     (impl)
     (intf))
    ((name Mreader_parser)
     (obj_name merlin_kernel__Mreader_parser)
     (visibility public)
     (impl)
     (intf))
    ((name Mreader_recover)
     (obj_name merlin_kernel__Mreader_recover)
     (visibility public)
     (impl)
     (intf))
    ((name Msource)
     (obj_name merlin_kernel__Msource)
     (visibility public)
     (impl)
     (intf))
    ((name Mtyper)
     (obj_name merlin_kernel__Mtyper)
     (visibility public)
     (impl)
     (intf))
    ((name Pparse)
     (obj_name merlin_kernel__Pparse)
     (visibility public)
     (impl)
     (intf))
    ((name Standard_library)
     (obj_name merlin_kernel__Standard_library)
     (visibility public)
     (impl)))
   (alias_module
    (name Merlin_kernel)
    (obj_name merlin_kernel)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name merlin-lib.ocaml_merlin_specific)
 (kind normal)
 (archives
  (byte ocaml_merlin_specific/merlin_specific.cma)
  (native ocaml_merlin_specific/merlin_specific.cmxa))
 (plugins
  (byte ocaml_merlin_specific/merlin_specific.cma)
  (native ocaml_merlin_specific/merlin_specific.cmxs))
 (native_archives ocaml_merlin_specific/merlin_specific.lib)
 (requires
  merlin-lib.utils
  merlin-lib.ocaml_parsing
  merlin-lib.ocaml_preprocess
  merlin-lib.ocaml_typing
  merlin-lib.ocaml_utils)
 (main_module_name Merlin_specific)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Merlin_specific)
   (modules
    ((name Browse_raw)
     (obj_name merlin_specific__Browse_raw)
     (visibility public)
     (impl)
     (intf))
    ((name Tast_helper)
     (obj_name merlin_specific__Tast_helper)
     (visibility public)
     (impl))
    ((name Typer_raw)
     (obj_name merlin_specific__Typer_raw)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Merlin_specific)
    (obj_name merlin_specific)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name merlin-lib.ocaml_parsing)
 (kind normal)
 (archives
  (byte ocaml_parsing/ocaml_parsing.cma)
  (native ocaml_parsing/ocaml_parsing.cmxa))
 (plugins
  (byte ocaml_parsing/ocaml_parsing.cma)
  (native ocaml_parsing/ocaml_parsing.cmxs))
 (native_archives ocaml_parsing/ocaml_parsing.lib)
 (requires merlin-lib.utils merlin-lib.ocaml_utils)
 (main_module_name Ocaml_parsing)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Ocaml_parsing)
   (modules
    ((name Ast_helper)
     (obj_name ocaml_parsing__Ast_helper)
     (visibility public)
     (impl)
     (intf))
    ((name Ast_iterator)
     (obj_name ocaml_parsing__Ast_iterator)
     (visibility public)
     (impl)
     (intf))
    ((name Ast_mapper)
     (obj_name ocaml_parsing__Ast_mapper)
     (visibility public)
     (impl)
     (intf))
    ((name Asttypes)
     (obj_name ocaml_parsing__Asttypes)
     (visibility public)
     (intf))
    ((name Attr_helper)
     (obj_name ocaml_parsing__Attr_helper)
     (visibility public)
     (impl)
     (intf))
    ((name Builtin_attributes)
     (obj_name ocaml_parsing__Builtin_attributes)
     (visibility public)
     (impl)
     (intf))
    ((name Docstrings)
     (obj_name ocaml_parsing__Docstrings)
     (visibility public)
     (impl)
     (intf))
    ((name Extend_helper)
     (obj_name ocaml_parsing__Extend_helper)
     (visibility public)
     (impl)
     (intf))
    ((name Fake)
     (obj_name ocaml_parsing__Fake)
     (visibility public)
     (impl)
     (intf))
    ((name Location)
     (obj_name ocaml_parsing__Location)
     (visibility public)
     (impl)
     (intf))
    ((name Location_aux)
     (obj_name ocaml_parsing__Location_aux)
     (visibility public)
     (impl)
     (intf))
    ((name Longident)
     (obj_name ocaml_parsing__Longident)
     (visibility public)
     (impl)
     (intf))
    ((name Msupport_parsing)
     (obj_name ocaml_parsing__Msupport_parsing)
     (visibility public)
     (impl))
    ((name Parsetree)
     (obj_name ocaml_parsing__Parsetree)
     (visibility public)
     (intf))
    ((name Pprintast)
     (obj_name ocaml_parsing__Pprintast)
     (visibility public)
     (impl)
     (intf))
    ((name Printast)
     (obj_name ocaml_parsing__Printast)
     (visibility public)
     (impl)
     (intf))
    ((name Syntaxerr)
     (obj_name ocaml_parsing__Syntaxerr)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Ocaml_parsing)
    (obj_name ocaml_parsing)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name merlin-lib.ocaml_preprocess)
 (kind normal)
 (archives
  (byte ocaml_preprocess/ocaml_preprocess.cma)
  (native ocaml_preprocess/ocaml_preprocess.cmxa))
 (plugins
  (byte ocaml_preprocess/ocaml_preprocess.cma)
  (native ocaml_preprocess/ocaml_preprocess.cmxs))
 (native_archives ocaml_preprocess/ocaml_preprocess.lib)
 (requires merlin-lib.ocaml_parsing merlin-lib.ocaml_utils merlin-lib.utils)
 (main_module_name Ocaml_preprocess)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Ocaml_preprocess)
   (modules
    ((name Lexer_ident)
     (obj_name ocaml_preprocess__Lexer_ident)
     (visibility public)
     (impl)
     (intf))
    ((name Lexer_raw)
     (obj_name ocaml_preprocess__Lexer_raw)
     (visibility public)
     (impl)
     (intf))
    ((name MenhirLib)
     (obj_name ocaml_preprocess__MenhirLib)
     (visibility public)
     (impl)
     (intf))
    ((name Parser_explain)
     (obj_name ocaml_preprocess__Parser_explain)
     (visibility public)
     (impl))
    ((name Parser_printer)
     (obj_name ocaml_preprocess__Parser_printer)
     (visibility public)
     (impl)
     (intf))
    ((name Parser_raw)
     (obj_name ocaml_preprocess__Parser_raw)
     (visibility public)
     (impl)
     (intf))
    ((name Parser_recover)
     (obj_name ocaml_preprocess__Parser_recover)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Ocaml_preprocess)
    (obj_name ocaml_preprocess)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name merlin-lib.ocaml_typing)
 (kind normal)
 (archives
  (byte ocaml_typing/ocaml_typing.cma)
  (native ocaml_typing/ocaml_typing.cmxa))
 (plugins
  (byte ocaml_typing/ocaml_typing.cma)
  (native ocaml_typing/ocaml_typing.cmxs))
 (native_archives ocaml_typing/ocaml_typing.lib)
 (requires merlin-lib.utils merlin-lib.ocaml_parsing merlin-lib.ocaml_utils)
 (main_module_name Ocaml_typing)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Ocaml_typing)
   (modules
    ((name Annot) (obj_name ocaml_typing__Annot) (visibility public) (intf))
    ((name Btype)
     (obj_name ocaml_typing__Btype)
     (visibility public)
     (impl)
     (intf))
    ((name Cmi_cache)
     (obj_name ocaml_typing__Cmi_cache)
     (visibility public)
     (impl))
    ((name Cmi_format)
     (obj_name ocaml_typing__Cmi_format)
     (visibility public)
     (impl)
     (intf))
    ((name Cmt_cache)
     (obj_name ocaml_typing__Cmt_cache)
     (visibility public)
     (impl))
    ((name Cmt_format)
     (obj_name ocaml_typing__Cmt_format)
     (visibility public)
     (impl)
     (intf))
    ((name Ctype)
     (obj_name ocaml_typing__Ctype)
     (visibility public)
     (impl)
     (intf))
    ((name Datarepr)
     (obj_name ocaml_typing__Datarepr)
     (visibility public)
     (impl)
     (intf))
    ((name Env)
     (obj_name ocaml_typing__Env)
     (visibility public)
     (impl)
     (intf))
    ((name Envaux)
     (obj_name ocaml_typing__Envaux)
     (visibility public)
     (impl)
     (intf))
    ((name Errortrace)
     (obj_name ocaml_typing__Errortrace)
     (visibility public)
     (impl)
     (intf))
    ((name Ident)
     (obj_name ocaml_typing__Ident)
     (visibility public)
     (impl)
     (intf))
    ((name Includeclass)
     (obj_name ocaml_typing__Includeclass)
     (visibility public)
     (impl)
     (intf))
    ((name Includecore)
     (obj_name ocaml_typing__Includecore)
     (visibility public)
     (impl)
     (intf))
    ((name Includemod)
     (obj_name ocaml_typing__Includemod)
     (visibility public)
     (impl)
     (intf))
    ((name Includemod_errorprinter)
     (obj_name ocaml_typing__Includemod_errorprinter)
     (visibility public)
     (impl)
     (intf))
    ((name Magic_numbers)
     (obj_name ocaml_typing__Magic_numbers)
     (visibility public)
     (impl))
    ((name Msupport)
     (obj_name ocaml_typing__Msupport)
     (visibility public)
     (impl)
     (intf))
    ((name Mtype)
     (obj_name ocaml_typing__Mtype)
     (visibility public)
     (impl)
     (intf))
    ((name Natural)
     (obj_name ocaml_typing__Natural)
     (visibility public)
     (impl)
     (intf))
    ((name Oprint)
     (obj_name ocaml_typing__Oprint)
     (visibility public)
     (impl)
     (intf))
    ((name Outcometree)
     (obj_name ocaml_typing__Outcometree)
     (visibility public)
     (intf))
    ((name Parmatch)
     (obj_name ocaml_typing__Parmatch)
     (visibility public)
     (impl)
     (intf))
    ((name Path)
     (obj_name ocaml_typing__Path)
     (visibility public)
     (impl)
     (intf))
    ((name Patterns)
     (obj_name ocaml_typing__Patterns)
     (visibility public)
     (impl)
     (intf))
    ((name Persistent_env)
     (obj_name ocaml_typing__Persistent_env)
     (visibility public)
     (impl)
     (intf))
    ((name Predef)
     (obj_name ocaml_typing__Predef)
     (visibility public)
     (impl)
     (intf))
    ((name Primitive)
     (obj_name ocaml_typing__Primitive)
     (visibility public)
     (impl)
     (intf))
    ((name Printpat)
     (obj_name ocaml_typing__Printpat)
     (visibility public)
     (impl)
     (intf))
    ((name Printtyp)
     (obj_name ocaml_typing__Printtyp)
     (visibility public)
     (impl)
     (intf))
    ((name Printtyped)
     (obj_name ocaml_typing__Printtyped)
     (visibility public)
     (impl)
     (intf))
    ((name Rec_check)
     (obj_name ocaml_typing__Rec_check)
     (visibility public)
     (impl)
     (intf))
    ((name Saved_parts)
     (obj_name ocaml_typing__Saved_parts)
     (visibility public)
     (impl)
     (intf))
    ((name Shape)
     (obj_name ocaml_typing__Shape)
     (visibility public)
     (impl)
     (intf))
    ((name Short_paths)
     (obj_name ocaml_typing__Short_paths)
     (visibility public)
     (impl)
     (intf))
    ((name Short_paths_graph)
     (obj_name ocaml_typing__Short_paths_graph)
     (visibility public)
     (impl)
     (intf))
    ((name Signature_group)
     (obj_name ocaml_typing__Signature_group)
     (visibility public)
     (impl)
     (intf))
    ((name Stypes)
     (obj_name ocaml_typing__Stypes)
     (visibility public)
     (impl)
     (intf))
    ((name Subst)
     (obj_name ocaml_typing__Subst)
     (visibility public)
     (impl)
     (intf))
    ((name Tast_iterator)
     (obj_name ocaml_typing__Tast_iterator)
     (visibility public)
     (impl)
     (intf))
    ((name Tast_mapper)
     (obj_name ocaml_typing__Tast_mapper)
     (visibility public)
     (impl)
     (intf))
    ((name Type_immediacy)
     (obj_name ocaml_typing__Type_immediacy)
     (visibility public)
     (impl)
     (intf))
    ((name Typeclass)
     (obj_name ocaml_typing__Typeclass)
     (visibility public)
     (impl)
     (intf))
    ((name Typecore)
     (obj_name ocaml_typing__Typecore)
     (visibility public)
     (impl)
     (intf))
    ((name Typedecl)
     (obj_name ocaml_typing__Typedecl)
     (visibility public)
     (impl)
     (intf))
    ((name Typedecl_immediacy)
     (obj_name ocaml_typing__Typedecl_immediacy)
     (visibility public)
     (impl)
     (intf))
    ((name Typedecl_properties)
     (obj_name ocaml_typing__Typedecl_properties)
     (visibility public)
     (impl)
     (intf))
    ((name Typedecl_separability)
     (obj_name ocaml_typing__Typedecl_separability)
     (visibility public)
     (impl)
     (intf))
    ((name Typedecl_unboxed)
     (obj_name ocaml_typing__Typedecl_unboxed)
     (visibility public)
     (impl)
     (intf))
    ((name Typedecl_variance)
     (obj_name ocaml_typing__Typedecl_variance)
     (visibility public)
     (impl)
     (intf))
    ((name Typedtree)
     (obj_name ocaml_typing__Typedtree)
     (visibility public)
     (impl)
     (intf))
    ((name Typemod)
     (obj_name ocaml_typing__Typemod)
     (visibility public)
     (impl)
     (intf))
    ((name Typeopt)
     (obj_name ocaml_typing__Typeopt)
     (visibility public)
     (impl)
     (intf))
    ((name Types)
     (obj_name ocaml_typing__Types)
     (visibility public)
     (impl)
     (intf))
    ((name Typetexp)
     (obj_name ocaml_typing__Typetexp)
     (visibility public)
     (impl)
     (intf))
    ((name Untypeast)
     (obj_name ocaml_typing__Untypeast)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Ocaml_typing)
    (obj_name ocaml_typing)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name merlin-lib.ocaml_utils)
 (kind normal)
 (archives
  (byte ocaml_utils/ocaml_utils.cma)
  (native ocaml_utils/ocaml_utils.cmxa))
 (plugins
  (byte ocaml_utils/ocaml_utils.cma)
  (native ocaml_utils/ocaml_utils.cmxs))
 (native_archives ocaml_utils/ocaml_utils.lib)
 (requires merlin-lib.config merlin-lib.utils)
 (main_module_name Ocaml_utils)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Ocaml_utils)
   (modules
    ((name Build_path_prefix_map)
     (obj_name ocaml_utils__Build_path_prefix_map)
     (visibility public)
     (impl)
     (intf))
    ((name Clflags)
     (obj_name ocaml_utils__Clflags)
     (visibility public)
     (impl)
     (intf))
    ((name Config)
     (obj_name ocaml_utils__Config)
     (visibility public)
     (impl)
     (intf))
    ((name Consistbl)
     (obj_name ocaml_utils__Consistbl)
     (visibility public)
     (impl)
     (intf))
    ((name Diffing)
     (obj_name ocaml_utils__Diffing)
     (visibility public)
     (impl)
     (intf))
    ((name Diffing_with_keys)
     (obj_name ocaml_utils__Diffing_with_keys)
     (visibility public)
     (impl)
     (intf))
    ((name Directory_content_cache)
     (obj_name ocaml_utils__Directory_content_cache)
     (visibility public)
     (impl))
    ((name Identifiable)
     (obj_name ocaml_utils__Identifiable)
     (visibility public)
     (impl)
     (intf))
    ((name Lazy_backtrack)
     (obj_name ocaml_utils__Lazy_backtrack)
     (visibility public)
     (impl)
     (intf))
    ((name Load_path)
     (obj_name ocaml_utils__Load_path)
     (visibility public)
     (impl)
     (intf))
    ((name Local_store)
     (obj_name ocaml_utils__Local_store)
     (visibility public)
     (impl)
     (intf))
    ((name Tbl) (obj_name ocaml_utils__Tbl) (visibility public) (impl) (intf))
    ((name Warnings)
     (obj_name ocaml_utils__Warnings)
     (visibility public)
     (impl)
     (intf)))
   (alias_module
    (name Ocaml_utils)
    (obj_name ocaml_utils)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name merlin-lib.os_ipc)
 (kind normal)
 (archives (byte os_ipc/os_ipc.cma) (native os_ipc/os_ipc.cmxa))
 (plugins (byte os_ipc/os_ipc.cma) (native os_ipc/os_ipc.cmxs))
 (foreign_objects os_ipc/os_ipc_stub.obj)
 (foreign_archives (archives (for all) (files os_ipc/libos_ipc_stubs.lib)))
 (native_archives os_ipc/os_ipc.lib)
 (main_module_name Os_ipc)
 (modes byte native)
 (modules
  (singleton (name Os_ipc) (obj_name os_ipc) (visibility public) (impl))))
(library
 (name merlin-lib.query_commands)
 (kind normal)
 (archives
  (byte query_commands/query_commands.cma)
  (native query_commands/query_commands.cmxa))
 (plugins
  (byte query_commands/query_commands.cma)
  (native query_commands/query_commands.cmxs))
 (native_archives query_commands/query_commands.lib)
 (requires
  merlin-lib.utils
  merlin-lib.kernel
  merlin-lib.ocaml_utils
  merlin-lib.ocaml_parsing
  merlin-lib.ocaml_typing
  merlin-lib.ocaml_merlin_specific
  merlin-lib.config
  merlin-lib.analysis
  merlin-lib.query_protocol)
 (main_module_name Query_commands)
 (modes byte native)
 (modules
  (singleton
   (name Query_commands)
   (obj_name query_commands)
   (visibility public)
   (impl)
   (intf))))
(library
 (name merlin-lib.query_protocol)
 (kind normal)
 (archives
  (byte query_protocol/query_protocol.cma)
  (native query_protocol/query_protocol.cmxa))
 (plugins
  (byte query_protocol/query_protocol.cma)
  (native query_protocol/query_protocol.cmxs))
 (native_archives query_protocol/query_protocol.lib)
 (requires merlin-lib.kernel merlin-lib.utils merlin-lib.ocaml_parsing)
 (main_module_name Query_protocol)
 (modes byte native)
 (modules
  (singleton
   (name Query_protocol)
   (obj_name query_protocol)
   (visibility public)
   (impl))))
(library
 (name merlin-lib.utils)
 (kind normal)
 (archives (byte utils/merlin_utils.cma) (native utils/merlin_utils.cmxa))
 (plugins (byte utils/merlin_utils.cma) (native utils/merlin_utils.cmxs))
 (foreign_objects utils/platform_misc.obj)
 (foreign_archives
  (archives (for all) (files utils/libmerlin_utils_stubs.lib)))
 (native_archives utils/merlin_utils.lib)
 (requires str unix)
 (main_module_name Merlin_utils)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Merlin_utils)
   (modules
    ((name File_cache)
     (obj_name merlin_utils__File_cache)
     (visibility public)
     (impl)
     (intf))
    ((name File_id)
     (obj_name merlin_utils__File_id)
     (visibility public)
     (impl)
     (intf))
    ((name Logger)
     (obj_name merlin_utils__Logger)
     (visibility public)
     (impl)
     (intf))
    ((name Marg)
     (obj_name merlin_utils__Marg)
     (visibility public)
     (impl)
     (intf))
    ((name Misc)
     (obj_name merlin_utils__Misc)
     (visibility public)
     (impl)
     (intf))
    ((name Ppxsetup)
     (obj_name merlin_utils__Ppxsetup)
     (visibility public)
     (impl)
     (intf))
    ((name Sexp)
     (obj_name merlin_utils__Sexp)
     (visibility public)
     (impl)
     (intf))
    ((name Std) (obj_name merlin_utils__Std) (visibility public) (impl)))
   (alias_module
    (name Merlin_utils)
    (obj_name merlin_utils)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
